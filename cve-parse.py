#!/usr/local/bin/python

import sys
import json
from xml.sax import make_parser, handler
from elasticsearch import Elasticsearch

#es = Elasticsearch(['http://bress:asdf1234@localhost:9200'])
es = Elasticsearch(['http://elastic:changeme@localhost:9200'])

class CVEHandler(handler.ContentHandler):

    def __init__(self):
        handler.ContentHandler.__init__(self)

        self.CVE = {}
        self.refs = []
        self.currentElement = None

    # ContentHandler methods

    def startElement(self, name, attrs):
        if name == 'cve':
            # The cve tag starts this show, let's ignore it
            pass
        elif name == 'item':
            # Here we go
            self.CVE = {}
            self.id = attrs['name']
            theYear = attrs['name'].split('-')[1]
            theID = attrs['name'].split('-')[2]
            self.CVE['year'] = int(theYear)
            self.CVE['id'] = int(theID)
            self.CVE['fromCVE'] = 1

        elif name == 'refs':
            # We're in the refs section
            #theCVE[-1]['_source']['ref'] = []
            pass

        elif name == 'ref':
            # This data structure is a bit of a mess, we'll do what we can
            #theCVE[-1]['_source']['ref'].append({})
            #self.currentElement = 'ref'
            #theCVE[-1]['_source']['ref'][-1]['desc'] = ''

            # Just store each attr in its own name
            #for key in attrs.keys():
            #    theCVE[-1]['_source']['ref'][-1][key] = attrs[key]
            pass

        elif name == 'desc':
            # The descriptions is filled in via the characters() method
            self.currentElement = "desc"
            self.CVE['description'] = ''

        else:
            # This is a tag we don't care about
            #print name
            pass

    def endElement(self, name):
        if name == 'cve':
            # The cve tag starts this show, let's ignore it
            pass
        elif name == 'item':
            # All done with this ID, store our data somewhere
            es.index(id=self.id, index="cve-index", doc_type='cve', body=self.CVE)
        elif name == 'ref':
            pass
        else:
            # This is a tag we don't care about
            pass

        self.currentElement = None

    def characters(self, content):

        # This is ugly, but it'll work
        if self.currentElement == 'desc':
            self.CVE['description'] += content
        elif self.currentElement == 'ref':
            pass


def main():

    if len(sys.argv) > 1:
        input_file = sys.argv[1]
    else:
        input_file = "data/allitems.xml"

    parser = make_parser()
    parser.setContentHandler(CVEHandler())
    parser.parse(input_file)

if __name__ == "__main__":
    main()
